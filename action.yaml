name: "Build and Push Docker Image"
description: "Builds a Docker image and pushes it to a registry. Tags 'latest' only for semver releases."

inputs:
  registry:
    description: "Docker registry (e.g., ghcr.io)"
    required: true
    default: "ghcr.io"
  image-name:
    description: "Docker image name"
    required: true
  tag:
    description: "Docker image tag"
    required: true
  context:
    description: "Docker build context"
    required: false
    default: "."
  dockerfile:
    description: "Dockerfile path"
    required: false
    default: "Dockerfile"
  github-token:
    description: "GitHub token for authentication"
    required: true

outputs:
  latest_tag:
    description: "Full image:latest tag if applicable, empty otherwise"
    value: ${{ steps.latest_tag.outputs.latest_tag }}

runs:
  using: "composite"
  steps:

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Determine if latest tag should be used
      id: latest_tag
      shell: bash
      run: |
        if [[ "${{ inputs.tag }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "latest_tag=${{ inputs.registry }}/${{ inputs.image-name }}:latest" >> $GITHUB_OUTPUT
          echo "use_latest=true" >> $GITHUB_OUTPUT
        else
          echo "latest_tag=" >> $GITHUB_OUTPUT
          echo "use_latest=false" >> $GITHUB_OUTPUT
        fi

    - name: Build and Push Docker Image (with latest tag)
      if: steps.latest_tag.outputs.use_latest == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        build-args: |
          IMAGE_TAG=${{ inputs.tag }}
        tags: |
          ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}
          ${{ steps.latest_tag.outputs.latest_tag }}
        labels: |
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ inputs.tag }}
          org.opencontainers.image.created=${{ github.event.release.published_at || github.event.repository.updated_at }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.title=${{ github.repository }}

    - name: Build and Push Docker Image (without latest tag)
      if: steps.latest_tag.outputs.use_latest == 'false'
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        build-args: |
          IMAGE_TAG=${{ inputs.tag }}
        tags: |
          ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.tag }}
        labels: |
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ inputs.tag }}
          org.opencontainers.image.created=${{ github.event.release.published_at || github.event.repository.updated_at }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.title=${{ github.repository }}
